ledger {
  data-source {
    default = "jdbc:h2:mem:default;db_close_delay=-1;db_close_on_exit=false"
    default = ${?DEFAULT_PARTICIPANT_DATABASE_JDBC_URL}
  }
  engine {
    allowed-language-versions = early-access
    contract-key-uniqueness = on
    forbid-v-0-contract-id = true
    limits {
      choice-controllers = 2147483647
      choice-observers = 2147483647
      contract-observers = 2147483647
      contract-signatories = 2147483647
      transaction-input-contracts = 2147483647
    }
    package-validation = true
    require-suffixed-global-contract-id = false
    stack-trace-mode = false
  }
  ledger-id = default-ledger-id
  metrics {
    registry-type = jvm-shared
    reporting-interval = "10s"
  }
  participants {
    default {
      api-server {
        api-stream-shutdown-timeout = "5s"
        command {
          input-buffer-size = 512
          max-commands-in-flight = 256
          tracker-retention-period = "300 seconds"
        }
        initial-ledger-configuration {
          avg-transaction-latency = 0 days
          delay-before-submitting = 0 days
          max-deduplication-duration = 30 minutes
          max-skew = 30 seconds
          min-skew = 30 seconds
        }
        configuration-load-timeout = "10s"
        management-service-timeout = "2m"
        max-inbound-message-size = 67108864
        party {
          implicit-party-allocation = false
        }
        port = 6865
        rate-limit {
          max-api-services-index-db-queue-size = 1000
          max-api-services-queue-size = 10000
          max-used-heap-space-percentage = 85
          min-free-heap-space-bytes = 314572800
        }
        seeding = strong
        time-provider-type = wall-clock
        user-management {
          cache-expiry-after-write-in-seconds = 5
          enabled = false
          max-cache-size = 100
          max-users-page-size = 1000
        }
      }
      authentication {
        type = wildcard
      }
      data-source-properties {
        connection-pool {
          connection-pool-size = 16
          connection-timeout = "250ms"
        }
        postgres {}
      }
      index-service {
        #Number of event pages fetched in parallel when serving ACS calls.
        acs-contract-fetching-parallelism = 2
        #Maximum number of concurrent ACS queries to the index database.
        acs-global-parallelism = 10
        #Number of contract id pages fetched in parallel when serving ACS calls.
        acs-id-fetching-parallelism = 2
        acs-id-page-buffer-size = 1
        #Number of contract ids fetched from the index for every round trip when serving ACS calls.
        acs-id-page-size = 20000
        acs-id-page-working-memory-bytes = 104857600
        api-stream-shutdown-timeout = "5s"
        buffered-streams-page-size = 100
        #Experimental buffer for Ledger API streaming queries. Should not be used in production.
        enable-in-memory-fan-out-for-ledger-api = false
        #Number of events fetched from the index for every round trip when serving streaming calls.
        events-page-size = 1000
        #Number of events fetched/decoded in parallel for populating the Ledger API internal buffers.
        events-processing-parallelism = 8
        max-contract-key-state-cache-size = 100000
        max-contract-state-cache-size = 100000
        max-transactions-in-memory-fan-out-buffer-size = 10000
      }
      indexer {
        batching-parallelism = 4
        enable-compression = false
        high-availability {
          indexer-lock-id = 105305792
          indexer-lock-id = ${?INDEXER_HIGH_AVAILABILITY_LOCK_ID}
          indexer-worker-lock-id = 105305793
          indexer-worker-lock-id = ${?INDEXER_HIGH_AVAILABILITY_WORKER_LOCK_ID}
          main-lock-acquire-retry-millis = 500
          main-lock-checker-period-millis = 1000
          worker-lock-acquire-max-retry = 1000
          worker-lock-acquire-retry-millis = 500
        }
        ingestion-parallelism = 16
        input-mapping-parallelism = 16
        max-input-buffer-size = 50
        restart-delay = "10s"
        startup-mode {
          allow-existing-schema = false
          type = migrate-and-start
        }
        submission-batch-size = 50
      }
      lf-value-translation-cache {
        contracts-maximum-size = 0
        events-maximum-size = 0
      }
      run-mode = combined
    }
  }
}

bridge {
  conflict-checking-enabled = true
  submission-buffer-size = 500
  max-deduplication-duration = 30 minutes
}
